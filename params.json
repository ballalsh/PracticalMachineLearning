{"name":"PracticalMachineLearning","tagline":"","body":"## Practical Machine Learning\r\n\r\n# Background\r\n\r\nUsing devices such as Jawbone Up, Nike FuelBand, and Fitbit it is now possible to collect a large amount of data about personal activity relatively inexpensively. These type of devices are part of the quantified self movement â€“ a group of enthusiasts who take measurements about themselves regularly to improve their health, to find patterns in their behavior, or because they are tech geeks. One thing that people regularly do is quantify how much of a particular activity they do, but they rarely quantify how well they do it. In this project, your goal will be to use data from accelerometers on the belt, forearm, arm, and dumbell of 6 participants. They were asked to perform barbell lifts correctly and incorrectly in 5 different ways. More information is available from the website here: http://groupware.les.inf.puc-rio.br/har (see the section on the Weight Lifting Exercise Dataset). \r\n\r\n\r\n# Data \r\n\r\nThe training data for this project are available here: \r\n\r\nhttps://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv\r\n\r\nThe test data are available here: \r\n\r\nhttps://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv\r\n\r\nThe data for this project come from this source: http://groupware.les.inf.puc-rio.br/har. If you use the document you create for this class for any purpose please cite them as they have been very generous in allowing their data to be used for this kind of assignment.\r\n\r\n## Loading required libraries and data\r\n\r\n```{r}\r\nlibrary(caret)\r\nlibrary(randomForest)\r\npmltrain = read.csv(\"./Coursera/practicalmachinelearning/pml-training.csv\",na.strings=c(\"NA\",\"#DIV/0!\",\"\"))\r\npmltest = read.csv(\"./Coursera/practicalmachinelearning/pml-testing.csv\",na.strings=c(\"NA\",\"#DIV/0!\",\"\"))\r\nsummary(pmltrain)\r\n```\r\n\r\n## Processing the data\r\n\r\n1. Replace #DIV/0! with NA (already done in read.csv)\r\n2. Drop columns with NAs \r\n2. Drop columns with blanks\r\n\r\n```{r}\r\nncol(pmltrain)\r\nncol(pmltrain[,sapply(pmltrain,is.numeric)]) #150 out of 160 columns are numeric\r\n\r\nsum(is.na(colSums(pmltrain[,sapply(pmltrain,is.numeric)]))) # 94 columns have NAs\r\n\r\nColsWithNAs = names(subset(is.na(colSums(pmltrain[,sapply(pmltrain,is.numeric)])),is.na(colSums(pmltrain[,sapply(pmltrain,is.numeric)]))==TRUE))\r\n\r\npmltrain = pmltrain[,!(colnames(pmltrain) %in% c(ColsWithNAs,\"X\",\"kurtosis_yaw_belt\",\"skewness_yaw_belt\",\"kurtosis_yaw_dumbbell\", \"skewness_yaw_dumbbell\",\"kurtosis_yaw_forearm\",\"skewness_yaw_forearm\"))]\r\npmltest = pmltest[,!(colnames(pmltrain) %in% c(ColsWithNAs,\"X\",\"kurtosis_yaw_belt\",\"skewness_yaw_belt\",\"kurtosis_yaw_dumbbell\", \"skewness_yaw_dumbbell\",\"kurtosis_yaw_forearm\",\"skewness_yaw_forearm\"))]\r\n\r\n```\r\n\r\n60 columns remain\r\n\r\n## Feature Selection and Model fitting\r\n\r\n1. Create test and training sets \r\n2. Drop columns 1:6 since they are qualitative\r\n3. Fit a model using randomForest (seed = 54321)\r\n\r\n```\r\nset.seed(54321)\r\ninTrain = createDataPartition(pmltrain$classe,p=0.7,list=FALSE)\r\n\r\ntraining = pmltrain[inTrain,-c(1:6)]\r\ntesting = pmltrain[-inTrain,-c(1:6)]\r\n\r\nmodel = randomForest(classe~.,data=training)\r\nmodel\r\n\r\n```\r\n\r\nOOB error is 0.52%\r\nPredict for both Training and Test data and display the confusion matrix\r\n\r\n```\r\npred1 = predict(model,newdata=training)\r\npred2 = predict(model,newdata=testing)\r\n\r\nconfusionMatrix(pred1,training$classe)\r\nconfusionMatrix(pred2,testing$classe)\r\n\r\n```\r\n\r\nAccuracy of validation set (dataset held out from pmltrain dataset) = 99.39%\r\n\r\nPredict for Coursera Submission\r\n\r\n```\r\npmltestForPred = predict(model,newdata=pmltest)\r\n\r\npml_write_files = function(x){\r\n  n = length(x)\r\n  for(i in 1:n){\r\n    filename = paste0(\"problem_id_\",i,\".txt\")\r\n    write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)\r\n  }\r\n}\r\n\r\nsetwd(\"./Coursera/practicalmachinelearning/answers/\")\r\n\r\npml_write_files(pmltestForPred)\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}